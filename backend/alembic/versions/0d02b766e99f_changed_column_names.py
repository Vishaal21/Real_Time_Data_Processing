"""changed column names

Revision ID: 0d02b766e99f
Revises: b09499a07845
Create Date: 2024-10-06 21:30:04.933033

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0d02b766e99f'
down_revision: Union[str, None] = 'b09499a07845'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('celery_tasksetmeta')
    op.drop_table('celery_taskmeta')
    op.add_column('security', sa.Column('Name', sa.String(), nullable=True))
    op.add_column('security', sa.Column('Open', sa.String(), nullable=True))
    op.add_column('security', sa.Column('Close', sa.String(), nullable=True))
    op.add_column('security', sa.Column('High', sa.String(), nullable=True))
    op.add_column('security', sa.Column('Low', sa.String(), nullable=True))
    op.add_column('security', sa.Column('Volume', sa.String(), nullable=True))
    op.add_column('security', sa.Column('Date', sa.String(), nullable=True))
    op.drop_index('ix_security_close_price', table_name='security')
    op.drop_index('ix_security_date', table_name='security')
    op.drop_index('ix_security_high_price', table_name='security')
    op.drop_index('ix_security_low_price', table_name='security')
    op.drop_index('ix_security_name', table_name='security')
    op.drop_index('ix_security_open_price', table_name='security')
    op.drop_index('ix_security_volume', table_name='security')
    op.create_index(op.f('ix_security_Close'), 'security', ['Close'], unique=False)
    op.create_index(op.f('ix_security_Date'), 'security', ['Date'], unique=False)
    op.create_index(op.f('ix_security_High'), 'security', ['High'], unique=False)
    op.create_index(op.f('ix_security_Low'), 'security', ['Low'], unique=False)
    op.create_index(op.f('ix_security_Name'), 'security', ['Name'], unique=False)
    op.create_index(op.f('ix_security_Open'), 'security', ['Open'], unique=False)
    op.create_index(op.f('ix_security_Volume'), 'security', ['Volume'], unique=False)
    op.drop_column('security', 'date')
    op.drop_column('security', 'low_price')
    op.drop_column('security', 'close_price')
    op.drop_column('security', 'open_price')
    op.drop_column('security', 'high_price')
    op.drop_column('security', 'volume')
    op.drop_column('security', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('security', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('security', sa.Column('volume', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('security', sa.Column('high_price', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('security', sa.Column('open_price', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('security', sa.Column('close_price', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('security', sa.Column('low_price', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('security', sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_security_Volume'), table_name='security')
    op.drop_index(op.f('ix_security_Open'), table_name='security')
    op.drop_index(op.f('ix_security_Name'), table_name='security')
    op.drop_index(op.f('ix_security_Low'), table_name='security')
    op.drop_index(op.f('ix_security_High'), table_name='security')
    op.drop_index(op.f('ix_security_Date'), table_name='security')
    op.drop_index(op.f('ix_security_Close'), table_name='security')
    op.create_index('ix_security_volume', 'security', ['volume'], unique=False)
    op.create_index('ix_security_open_price', 'security', ['open_price'], unique=False)
    op.create_index('ix_security_name', 'security', ['name'], unique=False)
    op.create_index('ix_security_low_price', 'security', ['low_price'], unique=False)
    op.create_index('ix_security_high_price', 'security', ['high_price'], unique=False)
    op.create_index('ix_security_date', 'security', ['date'], unique=False)
    op.create_index('ix_security_close_price', 'security', ['close_price'], unique=False)
    op.drop_column('security', 'Date')
    op.drop_column('security', 'Volume')
    op.drop_column('security', 'Low')
    op.drop_column('security', 'High')
    op.drop_column('security', 'Close')
    op.drop_column('security', 'Open')
    op.drop_column('security', 'Name')
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    # ### end Alembic commands ###
